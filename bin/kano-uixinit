#!/bin/bash

# kano-uixinit
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
#  This script is a wrapper on top of LXDE autoinit.
#
#  It starts kano-settings if needed and sets the background wallpaper
#  It fits well on bootup and logoff-logon transitions.
#

. /usr/share/kano-toolset/logging.sh

export LOG_LEVEL="info"

first_boot_file="$HOME/.kano-settings/first_boot"
after_update_file="$HOME/.kano-settings/after_update"
mkdir -p "$HOME/.kano-settings"

function is_installed
{
    if [ -n "`which $1`" ]; then
        return 0
    else
        return 1
    fi
}

function set_keyboard
{
    # Load Kano Keyboard configuration file for Hotkeys, or a generic one for regular keyboards
    keyboard_conf_dir="/usr/share/kano-desktop/config/keyboard"
    if [ "$1" = "True" ]; then
        keyboard_conf="$keyboard_conf_dir/kanokeyboardrc"
    else
        keyboard_conf="$keyboard_conf_dir/generickeyboardrc"
    fi
    logger_info "Launching xbindkeys with configuration: $keyboard_conf"
    /usr/bin/xbindkeys -f $keyboard_conf

    # Set user keyboard layout
    logger_info "Setting the keyboard layout for the user"
    sudo /usr/bin/kano-settings-cli set keyboard --load
}

############ STARTS HERE ############

# Disable XServer screen saver time and screen blanking (The display would become black)
if is_installed xset; then
    logger_info "Disabling the screensaver"
    xset s off
    xset -dpms
    xset s noblank
fi

# detect kano-keyboard
kano_keyboard=`python -c "from kano.utils import detect_kano_keyboard; print detect_kano_keyboard()"`

check_for_updates=1

# Load init configuration options
INIT_CONF=/boot/init.conf
SKIP="false"
FLOW="normal"
if [ -e $INIT_CONF ]; then
    do_skip=`json-get $INIT_CONF kano_init_flow.skip`
    rv=$?
    if [ "$rv" -eq 0 ] && [ "$do_skip" == "True" ]; then
        SKIP="true"
    fi

    flow_type=`json-get $INIT_CONF kano_init_flow.flow`
    rv=$?
    if [ "$rv" -eq 0 ] && [ -n "$flow_type" ]; then
        FLOW="$flow_type"
    fi
fi

# The following block is related to the first bootflow
if [ ! -f $first_boot_file ] && [ "$SKIP" != "true" ]; then

    # This is backwards compatibility with version prior to Beta 1.3.1
    if [ ! -f $after_update_file ]; then
        # Keyboard tutorial
        if [ "$kano_keyboard" == "True" ]; then
            kano-tutorial
        fi
        # load background
        /usr/bin/kdesk -w &
        # Launch init flow
        logger_info "Launching kano-init-flow"
        sudo kano-init-flow
        logger_info "kano-init-flow completed"
    else
        # load background
        /usr/bin/kdesk -w &
        # Remove temp file
        rm $after_update_file
    fi
    # Login / Create account
    if [ "$FLOW" != "workshops" ]; then
        kano-login first_boot
    fi
    # Video
    logger_info "Playing os_intro.mkv"
    kano-video-cli /usr/share/kano-media/videos/os_intro.mkv
    # regenerating ssh keys
    if [ `kano-usertools number` -eq 1 ]; then
        sudo regenerate-ssh-keys &
    fi
    # Finalise
    sudo kano-init finalise
    touch $first_boot_file
    # Do not check for updates on first boot
    check_for_updates=0
# The following is executed in subsequent boots
else
    # load background
    /usr/bin/kdesk -w &
    # loads and sets the keyboard layout
    set_keyboard $kano_keyboard
fi

# startmouse
logger_info "Launching startmouse"
/usr/bin/startmouse &

# check for updates and display the update dialog
# restrict server communication to max once a week (168 hours)
if [ $check_for_updates -eq 1 ] && [ is_internet ]; then
    logger_info "Checking for update"

    # present an hourglass
    kdesk-hourglass-app "check-for-updates"
    sudo /usr/bin/check-for-updates -t 168 -d
else
    logger_info "Not checking for update"
fi

# lxpanel
logger_info "Launching LXPanel"

# start hourglass to wait for the last X11 app to get ready
kdesk-hourglass-app "kano-feedback-widget"
/usr/bin/lxpanel --profile LXDE &

# starting kdesk
logger_info "Launching kdesk"
/usr/bin/kdesk &
/usr/bin/kano-feedback-widget &

# Report a startup event to Kano Tracker
kano-profile-cli increment_app_runtime startup 0

# Remove Homedir "Desktop" folder created by:
# /usr/share/xsessions/lightdm-xsession.desktop
rm -rf  ~/Desktop

# starting kano-vnc
startvnc=/usr/share/kano-vnc/startvnc
if [ -e $startvnc ]; then
    logger_info "Launching startvnc"
    $startvnc
fi
